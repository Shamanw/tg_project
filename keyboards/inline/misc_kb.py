from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


def multi_kb(callback_data: str = 'START', text: str = '‚Äπ –ù–∞–∑–∞–¥'):
    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text=text,
                    callback_data=callback_data
                )
            ]
        ]
    )
    return markup


def multi_2_kb(callback_data: str = 'START', text: str = 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å', callback_data_back: str = 'START', text_back: str = '‚Äπ –ù–∞–∑–∞–¥'):
    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text=text,
                    callback_data=callback_data
                )
            ],
            [
                InlineKeyboardButton(
                    text=text_back,
                    callback_data=callback_data_back
                )
            ]
        ]
    )
    return markup



def phone_write_manage_kb(primary_id, status=None):
    buttons = []
    
    buttons.append(
        [
            InlineKeyboardButton(
                text='üóÇ TDATA',
                callback_data=f'PHONE|TDATA|{primary_id}'
            ),
            InlineKeyboardButton(
                text='üóÑ SESSION',
                callback_data=f'PHONE|SESSION|{primary_id}'
            )
        ],
    )

    buttons.append(
        [
            InlineKeyboardButton(
                text='üóÑ‚¨ÜÔ∏è –í—ã–≥—Ä—É–∑–∏—Ç—å –≤ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π –±–æ—Ç',
                callback_data=f'PHONE|UNLOAD|{primary_id}'
            ),
        ],
    )
    buttons.append(
        [
            InlineKeyboardButton(
                text='üóÑ‚¨áÔ∏è –ó–∞–±—Ä–∞—Ç—å –∏–∑ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –±–æ—Ç–∞',
                callback_data=f'PHONE|TAKE|{primary_id}'
            ),
        ],
    )

    buttons.append(
        [
            InlineKeyboardButton(
                text='‚úÖ',
                callback_data=f'PHONE|SC|{primary_id}'
            ),
            InlineKeyboardButton(
                text='üíµ',
                callback_data=f'PHONE|PY|{primary_id}'
            ),
            InlineKeyboardButton(
                text='üí¢',
                callback_data=f'PHONE|SL|{primary_id}'
            ),
        ],
    )

    buttons.append(
        [
            InlineKeyboardButton(
                text='üóë',
                callback_data=f'PHONE|D1|{primary_id}'
            ),
            InlineKeyboardButton(
                text='üóë üìâ',
                callback_data=f'PHONE|D2|{primary_id}'
            ),
            InlineKeyboardButton(
                text='‚ò†Ô∏è',
                callback_data=f'PHONE|NV1|{primary_id}'
            ),
            InlineKeyboardButton(
                text='‚ò†Ô∏è üìâ',
                callback_data=f'PHONE|NV2|{primary_id}'
            ),
        ],
    )

    buttons.append(
        [
            InlineKeyboardButton(
                text='üîÑ',
                callback_data=f'PHONE|U|{primary_id}'
            ),
            InlineKeyboardButton(
                text='‚ùå',
                callback_data='DELETE'
            )
        ],
    )

    markup = InlineKeyboardMarkup(
        inline_keyboard=buttons
    )
    return markup


def withdraw_kb(primary_id, status=None):
    buttons = [
        [
            InlineKeyboardButton(
                text='üîÑ –û–±–Ω–æ–≤–∏—Ç—å',
                callback_data=f'AWD|W|U|{primary_id}'
            )
        ],
        [
            InlineKeyboardButton(
                text='‚ùå –ó–∞–∫—Ä—ã—Ç—å',
                callback_data='DELETE'
            )
        ],
    ]
    if status is not None and status == 0:
        buttons.append(
            [
                InlineKeyboardButton(
                    text='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Å –≤–æ–∑–≤—Ä–∞—Ç–æ–º',
                    callback_data=f'AWD|W|CL|{primary_id}'
                )
            ],
        )
        buttons.append(
            [
                InlineKeyboardButton(
                    text='üóë –£–¥–∞–ª–∏—Ç—å –±–µ–∑ –≤–æ–∑–≤—Ä–∞—Ç–∞',
                    callback_data=f'AWD|W|DD|{primary_id}'
                )
            ],
        )
    
    markup = InlineKeyboardMarkup(
        inline_keyboard=buttons
    )
    return markup


def subscribe_kb(channel_link):
    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text='–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è',
                    url=channel_link
                )
            ],
            [
                InlineKeyboardButton(
                    text='‚ùå',
                    callback_data='DELETE'
                )
            ]
        ]
    )
    return markup


def manual_check_kb(manual_link):
    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text='üëÅ –ü—Ä–æ—á–∏—Ç–∞—Ç—å',
                    url=manual_link
                )
            ],
            [
                InlineKeyboardButton(
                    text='‚û°Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å',
                    callback_data='DROP_WORK|MANUAL'
                )
            ]
        ]
    )
    return markup


async def multi_new_kb(text: str = '‚Äπ –ù–∞–∑–∞–¥', callback_data: str = 'START'):
    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text=text,
                    callback_data=callback_data
                )
            ],
        ]
    )
    return markup

async def multi_new_2_kb(text: str = '‚Äπ –ù–∞–∑–∞–¥', callback_data: str = 'START', text2: str = '‚Äπ‚Äπ –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data2: str = 'START'):
    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text=text,
                    callback_data=callback_data
                )
            ],
            [
                InlineKeyboardButton(
                    text=text2,
                    callback_data=callback_data2
                )
            ]
        ]
    )
    return markup

async def multi_new_2_2_kb(text: str = '‚Äπ –ù–∞–∑–∞–¥', callback_data: str = 'START', text2: str = '‚Äπ‚Äπ –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data2: str = 'START'):
    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text=text,
                    callback_data=callback_data
                ),
                InlineKeyboardButton(
                    text=text2,
                    callback_data=callback_data2
                )
            ]
        ]
    )
    return markup

async def multi_new_3_kb(text: str = '‚Äπ –ù–∞–∑–∞–¥', callback_data: str = 'START', text2: str = '‚Äπ‚Äπ –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data2: str = 'START', text3: str = '‚Äπ‚Äπ –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data3: str = 'START'):
    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text=text,
                    callback_data=callback_data
                )
            ],
            [
                InlineKeyboardButton(
                    text=text2,
                    callback_data=callback_data2
                )
            ],
            [
                InlineKeyboardButton(
                    text=text3,
                    callback_data=callback_data3
                )
            ]
        ]
    )
    return markup


async def delete_kb():
    markup=InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text='‚úñÔ∏è –ó–∞–∫—Ä—ã—Ç—å',
                    callback_data='DELETE'
                )
            ]
        ]
    )
    return markup